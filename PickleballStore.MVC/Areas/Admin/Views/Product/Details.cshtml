@model ProductViewModel

<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card shadow-sm rounded-3">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h4 class="card-title mb-0">Product Details</h4>
                    <div>
                        <a asp-action="Update" asp-route-id="@Model.Id" class="btn btn-warning btn-sm">
                            <i class="mdi mdi-pencil"></i> Edit
                        </a>
                        <a asp-action="Index" class="btn btn-light btn-sm">
                            <i class="mdi mdi-arrow-left"></i> Back to List
                        </a>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-5">
                        <div class="mb-3">
                            <img src="~/images/products/@Model.CoverImageName"
                                 alt="@Model.Name"
                                 class="img-fluid rounded shadow-sm main-product-image"
                                 style="width: 100%; max-height: 400px; object-fit: cover;" />
                        </div>


                        @if (Model.Images != null && Model.Images.Any())
                        {
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var image in Model.Images.OrderByDescending(i => i.IsMain))
                                {
                                    <img src="~/images/products/@image.ImageName"
                                         alt="Product Image"
                                         class="rounded thumbnail-image @(image.IsMain ? "active" : "")"
                                         style="width: 80px; height: 80px; object-fit: cover; cursor: pointer; border: 2px solid @(image.IsMain ? "#007bff" : "#ddd");"
                                         onclick="changeMainImage(this.src, this)" />
                                }
                            </div>
                        }
                    </div>

                    <div class="col-md-7">
                        <h2 class="mb-3">@Model.Name</h2>

                        <div class="mb-4">
                            <h3 class="text-primary">$@Model.Price.ToString("N2")</h3>
                        </div>

                        <table class="table table-borderless">
                            <tbody>
                                <tr>
                                    <th style="width: 150px;">Category:</th>
                                    <td>
                                        <span class="badge badge-info">@Model.CategoryName</span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>Stock:</th>
                                    <td>
                                        @if (Model.QuantityAvailable > 0)
                                        {
                                            <span class="badge badge-success">@Model.QuantityAvailable in stock</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-danger">Out of stock</span>
                                        }
                                    </td>
                                </tr>      
                            </tbody>
                        </table>

                        @if (Model.Variants != null && Model.Variants.Any())
                        {
                            <div class="mt-4">
                                <h5 class="mb-3">Available Variants</h5>
                                <div class="d-flex flex-wrap gap-2">
                                    @foreach (var variant in Model.Variants)
                                    {
                                        <div class="border rounded p-2 d-flex align-items-center" style="min-width: 120px;">
                                            @if (!string.IsNullOrEmpty(variant.ColorCode))
                                            {
                                                <div style="width: 30px; height: 30px; background-color: @variant.ColorCode; border-radius: 50%; border: 2px solid #ddd; margin-right: 10px;"></div>
                                            }
                                            <div>
                                                <small class="text-muted d-block">@variant.OptionName</small>
                                                <strong>@variant.OptionValue</strong>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card border">
                            <div class="card-body">
                                <h5 class="card-title">Description</h5>
                                <div class="mt-3">
                                    @Html.Raw(Model.Description)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.AdditionalInformation))
                {
                    <div class="row mt-3">
                        <div class="col-12">
                            <div class="card border">
                                <div class="card-body">
                                    <h5 class="card-title">Additional Information</h5>
                                    <div class="mt-3">
                                        @Html.Raw(Model.AdditionalInformation)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function changeMainImage(src, clickedElement) {
            const mainImage = document.querySelector('.main-product-image');
            mainImage.src = src;


            document.querySelectorAll('.thumbnail-image').forEach(img => {
                img.style.borderColor = '#ddd';
                img.classList.remove('active');
            });

            clickedElement.style.borderColor = '#007bff';
            clickedElement.classList.add('active');
        }

        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.thumbnail-image').forEach(img => {
                img.addEventListener('mouseenter', function() {
                    if (!this.classList.contains('active')) {
                        this.style.borderColor = '#6c757d';
                    }
                });

                img.addEventListener('mouseleave', function() {
                    if (!this.classList.contains('active')) {
                        this.style.borderColor = '#ddd';
                    }
                });
            });
        });
    </script>
}